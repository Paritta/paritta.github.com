---
layout: post
title:  "vscode로 갈아타기"
author: "Paritta"
---
 
<img src='https://jmyang.kr/wp-content/uploads/2018/01/vs-code-logo-730x350.png'>

## Webstorm에서 vs로..........
vscode가 좀 더 가벼운거 느낌이다. 전체적인 ui느낌도 좋다. webstorm도 안될건 없지만 staging 하고 푸시하는것도 vscode가 더 가볍고 간편한 느낌이다.
히스토리 보는거는 도구가 없어서 터미널을 써야되는데 그냥 터미널을 써야되는 부분도 맘에 든다. 터미널에서 만지면 옵션도 더 다양하게 줄 수 있고 익숙해지면 더 편할거 같다.
터미널에 익숙해지면 다른 어떤 gui를 써도 금방 적응 할수 있다는 점도 마음에든다.
그래서 websotrm에서 자주 사용하던 git 옵션을 터미널에서 어떻게 사용 할건지 한번 정리해봤다.

1. 로컬 변경 사항 내역
2. HEAD와 특정 브랜치 비교
3. 특정 커밋의 비교
4. 커밋 히스토리? 이건 웹스톰을 쓸때도 소스트리를 썼으니까 소스트리를 계속 써야될 것 같다.

첫번째
```
git diff HEAD ./path/to/file <- not staged
git diff --cached ./path/to/file <- staged
```
파일 경로는 vscode 파일 탐색기에서 해당 경로로 터미널을 열 수 있는 기능이 있어서 이용하면 될듯하다.

두번째
```
git diff origin/master
```
요고도 뒤에 파일 경로 붙일 수 있음

세번째
```
git diff 957fbc92b123030c389bf8b4b874522bdf2db72c ce489262a1ee34340440e55a0b99ea6918e19e7a 
```
걍 이런식으로?
이런 비슷한 내용 뒤적여보니 자료가 많았는데 이 정도 외에는 쓸일이 잘 없을 것 같다. 있으면... 그때그때 찾아서....

깔끔한 UI의 GitDesktop에 꽂혔는데 GitDesktop에서 해당 레포 경로로 vscode를 바로 열 수 있는 단축키가 있다는 점도 맘에 든다.
시간이 되면 GitDesktop에 위에 정리한 Diff기능 붙여서 풀 리퀘 보내고 싶다. 일렉트론 고고싱....

